# Script for registrering the connectors at the connect cluster. 
# Connector used:
# https://jcustenborder.github.io/kafka-connect-documentation/projects/kafka-connect-spooldir/sources/SpoolDirBinaryFileSourceConnector.html
kind: ConfigMap
apiVersion: v1
metadata:
  name: parquet-connector-source
data:
  connector_parquet_reader.sh: |
    echo "Waiting for Kafka Connect to start listening on kafka-connect"
    while :; do
        # Check if the connector endpoint is ready
        # If not check again
        curl_status=$(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors)
        echo -e $(date) "Kafka Connect listener HTTP state: " $curl_status " (waiting for 200)"
        if [ $curl_status -eq 200 ]; then
            break
        fi
        sleep 5
    done
    {{- range .Values.connector.topics }}
    echo "\nCreating folders"
    mkdir -p /kafka/{{ .name }}/input
    mkdir -p /kafka/{{ .name }}/error
    mkdir -p /kafka/{{ .name }}/finish

    echo "======> Creating connector for {{ .name }}"
    # Send a simple POST request to create the connector
    curl -X POST \
        -H "Content-Type: application/json" \
        --data '{
        "name": "{{ .name }}-connector",
        "config": {
            "connector.class": "com.github.jcustenborder.kafka.connect.spooldir.SpoolDirBinaryFileSourceConnector",
            "tasks.max": 1,
            "topic": "{{ .name }}",
            "input.path": "/kafka/{{ .name }}/input",
            "input.file.pattern": ".*.parquet",
            "error.path": "/kafka/{{ .name }}/error/",
            "finished.path": "/kafka/{{ .name }}/finish",
            "halt.on.error": "false",
            "cleanup.policy": "MOVE"
            }
        }' http://localhost:8083/connectors
    {{- end }}
