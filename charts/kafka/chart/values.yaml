env: prod
# Docs https://github.com/strimzi/strimzi-kafka-operator/blob/main/helm-charts/helm3/strimzi-kafka-operator/values.yaml
strimzi-kafka-operator:
  generateNetworkPolicy: false
  extraEnvs:
    - name: JAVA_OPTS
      value: "-Xms80m -Xmx80m"
cluster:
  name: my-cluster
  kafka:
    # Supported versions 3.1.0, 3.1.1, 3.1.2, 3.2.0, 3.2.1, 3.2.3
    version: 3.1.2
    storage:
      class: standard
      size: 500Mi
    replicas: 1
    # A subset of the broker configuration can be set here
    # see https://kafka.apache.org/documentation/#brokerconfigs
    config:
      # If a topic does not exist, create it if someone writes to it.
      autoCreateTopicEnable: "false"
      # The following configurations can be set, when not they use the default
      # logRetentionHours: 168
      # logRollHours: 168
      # offsetsTopicReplicationFactor: 3
      # transactionStateLogReplicationFactor: 3
      # transactionStateLogMinIsr: 2
    # https://strimzi.io/docs/operators/in-development/using.html#type-GenericKafkaListener-reference
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
    resources: {}
  zookeeper:
    storage:
      class: standard
      size: 500Mi
    replicas: 1
    resources: {}
  entityOperator:
    tlsSidecar:
      resources: {}
    topicOperator:
      resources: {}
    userOperator:
      resources: {}
  kafkaExporter:
    resources: {}
# Values for the exporter helm chart dependency:
# https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus-kafka-exporter/values.yaml
prometheus-kafka-exporter:
  enabled: false
# kafkaServer:
#   - my-cluster-kafka-bootstrap:9092
# prometheus:
#   serviceMonitor:
#     enabled: true
#     namespace: kafka
#     additionalLabels:
#       release: prometheus
# Values for the confluent helm chart dependency:
# https://github.com/confluentinc/cp-helm-charts/blob/master/values.yaml
cp-helm-charts:
  enabled: true
  cp-zookeeper:
    enabled: false
  cp-kafka:
    enabled: false
  cp-kafka-rest:
    enabled: false
  # Values for the connect cluster inside the dependency:
  # https://github.com/confluentinc/cp-helm-charts/blob/master/charts/cp-kafka-connect/values.yaml
  cp-kafka-connect:
    enabled: false

  # Docs: https://github.com/confluentinc/cp-helm-charts/blob/master/charts/cp-ksql-server/values.yaml
  cp-ksql-server:
    enabled: true
    image: confluentinc/cp-ksqldb-server
    imageTag: 6.2.1
    cp-schema-registry:
      url: http://kafka-cp-schema-registry:8081
    kafka:
      bootstrapServers: my-cluster-kafka-bootstrap:9092
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: cp-ksql-server
              topologyKey: "kubernetes.io/hostname"
  cp-schema-registry:
    enabled: true
    image: confluentinc/cp-schema-registry
    imageTag: 6.2.1
    kafka:
      bootstrapServers: my-cluster-kafka-bootstrap:9092
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: cp-schema-registry
              topologyKey: "kubernetes.io/hostname"
  cp-control-center:
    enabled: false

# The following topics will be created by the operator
topics:
  - name: topic-test-1
    partitions: 1
    replicas: 1
# Topic configuration: https://kafka.apache.org/documentation/#topicconfigs
    config:
      retention.ms: 7200000
      segment.bytes: 1073741824
