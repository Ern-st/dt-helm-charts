{{- range $deploymentName, $val := .Values.deployments }}
{{- $fullName := (printf "%s-%s" $.Release.Name $deploymentName) }}
{{- if .enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "chart.labels" (dict "name" $fullName "values" $val "root" $) | nindent 4 }}
spec:
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" (dict "name" $fullName) | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- /* To ensure pods are recreated when a configmap changes that the pod mounts, we annotate the pods with the checksums of the configmaps. */}}
          {{- range $_, $allConfigMap := $.Values.configMaps -}}
            {{- range $_, $deploymentConfigMap := $val.configMaps -}}
              {{- if eq $allConfigMap.name $deploymentConfigMap.name }}
                {{- printf "%s/%s: %s" "checksum-configmap" $allConfigMap.name ($allConfigMap | toYaml | toString | sha256sum) | nindent 8 }}
              {{- end -}}
            {{- end -}}
          {{- end }}
      labels:
        {{- include "chart.selectorLabels" (dict "name" $fullName) | nindent 8 }}
    spec:
      {{- include "chart.topologySpreadConstrains" (dict "root" $ "values" $val "name" $fullName) | nindent 6 }}
      imagePullSecrets:
        - name: registry-token
      containers:
        - name: {{ $fullName }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: {{ printf "%s:%s" .image.repository .image.tag }}
          imagePullPolicy: IfNotPresent
          ports:
          {{- range .ports }}
            - name: {{ .podPortName }}
              containerPort: {{ .podPort }}
              protocol: {{ .protocol }}
          {{- end }}
          {{- /* If the "livenessProbe" key does not exist on the deployment in the values file or the value is something that evaluates to false, we use default values */}}
          livenessProbe:
            {{- if or (not .livenessProbe) (not (hasKey $val "livenessProbe")) }}
            httpGet:
              path: /healthz
              port: 9898
            {{- else }}
              {{- toYaml .livenessProbe | nindent 12 }}
            {{- end }}
          {{- /* If the "readinessProbe" key does not exist on the deployment in the values file or the value is something that evaluates to false, we use default values */}}
          readinessProbe:
            {{- if or (not .readinessProbe) (not (hasKey $val "readinessProbe")) }}
            httpGet:
              path: /healthz
              port: 9898
            {{- else }}
              {{- toYaml .readinessProbe | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          volumeMounts:
            {{- range .persistentVolumeClaims }}
            - name: {{ .name }}-volume
              mountPath: {{ .path }}
            {{- end }}
          envFrom:
            {{- range .secrets }}
            - secretRef:
                name: {{ printf "%s-%s" $.Release.Name .name }}
            {{- end }}
            {{- range .configMaps }}
            - configMapRef:
                name: {{ printf "%s-%s" $.Release.Name .name }}
            {{- end }}
      volumes:
        {{- range .persistentVolumeClaims }}
        - name: {{ .name }}-volume
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" $.Release.Name .name }}
        {{- end }}
{{ end -}}
{{- end }}
